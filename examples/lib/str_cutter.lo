include "lib/std";

struct StrCutter {
    piece: StringSlice,
    rest: StringSlice,
};

fn StrCutter::new(source: StringSlice) -> StrCutter {
    return StrCutter { piece: "" as StringSlice, rest: source };
};

fn StrCutter::cut_at(self, delim: StringSlice) -> StrCutter {
    let cut_start = 0;
    let cut_width = 0;
    loop {
        if cut_start == self.rest.size {
            cut_start -= 1;
            break;
        };

        if self.rest.char_at(cut_start) == delim.char_at(cut_width) {
            cut_width += 1;
        } else {
            cut_width = 0;
        };

        if cut_width == delim.size {
            break;
        };

        cut_start += 1;
    };

    return StrCutter {
        piece: StringSlice {
            data: self.rest.data,
            size: cut_start - cut_width - 1,
        },
        rest: StringSlice {
            data: (self.rest.data as u32 + cut_start + 1) as &* u8,
            size: self.rest.size - cut_start + 1,
        },
    };
};
