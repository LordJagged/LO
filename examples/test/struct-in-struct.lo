include "lib/cli";

struct Point2D {
    x: u32,
    y: u32,
};

struct Rect {
    tl: Point2D,
    br: Point2D,
};

fn main() {
    let r = Rect {
        tl: Point2D { x: 1, y: 2 },
        br: Point2D { x: 3, y: 4 },
    };

    let br = r.br;
    print_u32(br.x);
    puts("\n");

    print_u32(r.br.x);
    puts("\n");

    let r_ref = Stack_alloc(sizeof Rect) as &Rect;
    *r_ref = r;
    defer Stack_free(sizeof Rect);

    let r2 = *r_ref;
    print_u32(r2.br.x);
    puts("\n");

    let br2 = r_ref->br;
    print_u32(br2.x);
    puts("\n");

    let br_ref = (r_ref + sizeof Point2D) as &Point2D;
    print_u32(br_ref->x);
    puts("\n");

    print_u32((*br_ref).x);
    puts("\n");

    // TODO: support chained `->`
    print_u32(r_ref->br.x);
    puts("\n");

    // TODO: throws TypeError
    // TODO: look into supporting nested references
    // let br2 = r.br;
    // print_u32(br2->x);
    // puts("\n");
};
