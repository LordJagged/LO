(mod lib/std)
(mod lib/lole/ir)
(mod lib/lole/parser)

(struct Lole/Compiler/CompileResult
    (ok bool)
    (data ptr) ; (& Lole/Wasm/WasmModule) | (& Lole/Ast/CompileError)
)

; TODO: implement
(fn Lole/Compiler/compile [(&exprs (& Vec<Lole/Ast/SExpr>))] [Lole/Compiler/CompileResult] (
    {&ctx : (& Lole/Ir/ModuleContext) = (Lole/Ir/ModuleContext/new)}
    (defer (Lole/Ir/ModuleContext/free &ctx))

    (return true (new Lole/Wasm/WasmModule
        {Lole/Ir/ModuleContext @ &ctx . wasm_module}
    ))

    ; (return false (new Lole/Ast/CompileError (do
    ;     (String/from_slice "CompileError: not implemented")
    ;     (struct.new Lole/Ast/Location
    ;         (StringSlice/clone "<internal>")
    ;         0 0 0 0
    ;     )
    ; )))
))
