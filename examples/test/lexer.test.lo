include "../lib/cli.lo";
include "../lib/fs.lo";
include "../lib/lo/lexer.lo";

const input_file = "examples/test/lexer.test.input.txt";

fn main() {
    let file_contents = fs::read_file(input_file) catch err {
        wasi::proc_exit(1);
    };
    defer file_contents.free();

    let lexer = LoLexer::new(0, str::from_string(file_contents));
    let tokens = lexer.lex_all() catch err {
        wasi::proc_exit(1);
    };
    defer tokens.free();

    for i in 0..tokens.tokens.size {
        let t = tokens.tokens.get!<LoToken>(i);

        puts(input_file);
        puts(":");
        print_u32(t.loc.pos.line);
        puts(":");
        print_u32(t.loc.pos.col);
        puts(" - ");
        print_u32(t.type_ as u32);
        puts(" : ");
        puts(t.repr);

        if t.type_ == LoTokenType::IntLiteral {
            puts(", value = ");
            print_u64(*(t.value as &u64));
        } else if t.type_ == LoTokenType::StringLiteral {
            puts(", value = ");
            print_str(t.value as &str);
        };

        puts("\n");
    };
};
