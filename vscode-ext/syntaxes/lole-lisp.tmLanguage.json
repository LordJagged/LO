{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "lole-lisp",
	"patterns": [
        {
            "include": "#constructs"
        },
        {
			"include": "#keywords"
		},
        {
			"include": "#constants"
		},
        {
            "include": "#sexprs"
        },
		{
			"include": "#types"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
        "types": {
            "patterns": [
                {
					"match": "(?<![A-Za-z0-9_])(void|bool|u8|i8|u16|i16|u32|i32|f32|u64|i64|f64)\\b",
					"captures": {
						"1": {
							"name": "entity.name.type.numeric.lole-lisp"
						}
					}
				},
                {
                    "name": "entity.name.type.lole-lisp",
                    "match": "\\b(_*[A-Z][A-Za-z_]*\\/)*_*[A-Z][A-Za-z0-9_]*\\b"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
					"name": "constant.language.boolean.lole-lisp",
					"match": "(true|false)"
				},
                {
					"name": "constant.numeric.long.lole-lisp",
					"match": "\\b\\d+"
				},
                {
                    "name": "variable.other.constant.lole-lisp",
                    "match": "\\b([A-Z][A-Za-z_]*\\/)*[A-Z0-9_]+(?=(\\s|\\)|\\]|\\}))"
                }
            ]
        },
		"keywords": {
			"patterns": [
                {
                    "name": "keyword.control.lole-lisp",
                    "match": "\\b(if|loop|export|return|fn|do|mod|global|sizeof|struct|break|not|continue|unreachable|mut|defer.eval|defer|mem|drop|import|alias|as)\\b"
			    },
                {
                    "name": "constant.keyword.lole-lisp",
                    "match": "(?<=(\\s|\\(|\\[|\\{)):[A-Za-z0-9_]+(?=(\\s|\\)|\\]|\\}))"
                },
                {
                    "name": "keyword.operator.lole-lisp",
                    "match": "(=|==|!|!=|&&|\\.|>=|<=|>|<|:|\\+|-|\\*|\\/|@|\\|\\|)"
                },
                {
                    "name": "keyword.operator.lole-lisp",
                    "match": "(&\\*?)\\s"
                }
            ]
		},
        "constructs": {
            "patterns": [
                {
					"begin": "\\b(fn)\\s+([A-Za-z0-9_/]+)",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.lole-lisp"
						},
                        "2": {
							"name": "entity.name.function.lole-lisp"
						}
					},
                    "end": "\\s"
				}
            ]
        },
        "sexprs": {
            "patterns": [
                {
					"match": "(?<=\\()([^;]+?)(?=\\s|\\))",
					"captures": {
						"1": {
							"name": "entity.name.function.lole-lisp"
						}
					},
					"patterns": [
						{
							"include": "$self"
						}
					]
				}
            ]
        },
		"strings": {
			"name": "string.quoted.double.lole-lisp",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.lole-lisp",
					"match": "\\\\."
				}
			]
		},
        "comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.lole-lisp",
					"match": "\\s*;.*"
				}
			]
		}
	},
	"scopeName": "source.lole"
}
