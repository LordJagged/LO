(export main :as main)

(mem m :min 100)

(struct Point2D
    (x i32)
    (y i32)
)

(fn main [] [i32] (
    {ref : ptr}
    {ref = (alloc (sizeof Point2D))}
    (struct.store Point2D ref (struct.new Point2D 2 3))

    {p : Point2D}
    {p = (struct.load Point2D ref)}

    {p . y}
))

(global-mut @heap_index u32 0)
(fn alloc [(size u32)] [ptr] (
    {ref : ptr}
    {ref = @heap_index}
    {@heap_index = {@heap_index + size}}
    ref
))
