(mod lib/std)

(mem m :min 100)

(enum ParseResult
    (Ok (value u32))
    (Err (error u32))
)
; desugars to:
; (struct ParseResult (kind u32) (ref ptr))
; (struct ParseResult/Ok (value u32))
; (struct ParseResult/Err (error u32))

(export main :as main)
(fn main [] [u32] (
    {res : ParseResult = (do_stuff)}

    (if {res . kind == (enum.kind ParseResult/Ok)} (do
        {res_ok : ParseResult/Ok = {ParseResult/Ok @ {res . ref}}}
        (return {res_ok . value})
    ))

    (return 0)
))

(fn do_stuff [] [ParseResult] (
    {&res : (& ParseResult/Ok) = (new ParseResult/Ok 1)}

    (return (struct.new ParseResult
        (enum.kind ParseResult/Ok)
        &res
    ))
))
