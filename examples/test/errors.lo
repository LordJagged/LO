include "../lib/cli.lo";

// Explanation:
// - `u32 throws DivideError` is the actual type
//   - it is stored as the tuple: (u32, DivideError)
// - `return` additionally emits default value of the error type
// - `throw` puts default value return type and the error value
// - default values of `error_type` indicate the absence of an error
//   - error codes fit nicely (0 - no error)
//   - other errors should be passed by a nullabe pointer (null - no error)

fn main() {
    divide_and_print(10, 5);
    divide_and_print(10, 2);
    divide_and_print(10, 0);
};

fn divide_and_print(a: u32, b: u32) {
    print_u32(a); puts(" / "); print_u32(b);

    let result = divide(a, b) catch _ {
        puts(" is undefined\n");
        return;
    };

    puts(" = "); print_u32(result); puts("\n");
};

type DivideError = u8;
const DivideError::DIVIDE_BY_ZERO = 1 as DivideError;

fn divide(a: u32, b: u32): u32 throws DivideError {
    if b == 0 {
        throw DivideError::DIVIDE_BY_ZERO;
    };

    return a / b;
};
