(struct Point2D
    (x u32)
    (y u32)
)

(export main :as main)
(fn main [] u32 (
    {p1 := (Point2D :x 0 :y 0)}
    {p1 . x = 1}
    {p1 . y = 2}

    {sum := (Point2D/add p1 (Point2D :x 1 :y 1))}

    (return (Point2D/len_squared sum))
))

(fn Point2D/add ((p1 Point2D) (p2 Point2D)) Point2D (
    (return (Point2D
        :x {p1 . x + {p2 . x}}
        :y {p1 . y + {p2 . y}}
    ))
))

(fn Point2D/len_squared [(p Point2D)] u32 (
    (return {p . x * {p . x} + {p . y * {p . y}}})
))
