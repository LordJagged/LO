(struct &WasiPrestat (actual ptr))
(struct WasiPrestat (tag u32) (dir_name_len u32))

(import fn fd_prestat_get [
    (fd u32)
    (&prestat &WasiPrestat)
] [WasiErr] :from wasi_snapshot_preview1 fd_prestat_get)

(import fn fd_prestat_dir_name [
    (fd u32)
    (&path &*u8)
    (path_len u32)
] [WasiErr] :from wasi_snapshot_preview1 fd_prestat_dir_name)

(global WasiPreopenType/DIR u8 0)

;; TODO: have this as a lib?
;; {&prestat : &WasiPrestat}
;; {&prestat = (Mem/alloc (sizeof WasiPrestat))}
;; {fd : i32}
;; {fd = 3}
;; (loop (
;;     {err : WasiErr}
;;     {err = (fd_prestat_get fd &prestat)}

;;     (if {err == WasiErr/BADF} (break))

;;     (if {err != WasiErr/SUCCESS} (do
;;         (return 1)
;;     ))

;;     {prestat : WasiPrestat}
;;     {prestat = (load WasiPrestat &prestat)}

;;     (if {{prestat . tag} != WasiPreopenType/DIR} (do
;;         (return 1)
;;     ))

;;     {path_len : u32}
;;     {path_len = {prestat . dir_name_len}}

;;     {&path : &*u8}
;;     {&path = (Mem/alloc path_len)}

;;     {err = (fd_prestat_dir_name fd &path path_len)}
;;     (if {err != WasiErr/SUCCESS} (do
;;         (return 1)
;;     ))

;;     (print_u32 fd)
;;     (print_char 'SPC) (print_char '-) (print_char 'SPC)
;;     (print_str_slice &path path_len)
;;     (println)

;;     {fd = {fd + 1}}
;; ))