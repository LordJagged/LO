(mod lib/cli)

(struct Point2D
    (x i32)
    (y i32)
)

(struct Rect
    (tl Point2D)
    (br Point2D)
)

(fn main [] void (
    {r := (struct.new Rect
        (struct.new Point2D 1 2)
        (struct.new Point2D 3 4)
    )}

    {br := {r . br}}
    (print_u32 {br . x})
    (puts "\n")

    (print_u32 {r . br . x})
    (puts "\n")

    {&r := (new Rect r :using Alloc/STACK)}
    (defer (Stack/free (sizeof Rect)))

    {r2 := (* &r)}
    (print_u32 {r2 . br . x})
    (puts "\n")

    {br2 := {&r -> br}}
    (print_u32 {br2 . x})
    (puts "\n")

    {&br : (& Point2D) = {&r + (sizeof Point2D)}}
    (print_u32 {&br -> x})
    (puts "\n")

    (print_u32 {Point2D @ {&r + (sizeof Point2D)} . x})
    (puts "\n")

    ; TODO: support chained `->`
    (print_u32 {&r -> br . x})
    (puts "\n")

    ; TODO: throws TypeError
    ; TODO: look into supporting nested references
    ; {&br2 := {&r . br}}
    ; (print_u32 {&br2 -> x})
    ; (puts "\n")
))
