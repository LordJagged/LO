include "lib/cli";
include "lib/fs";

type Vec::u32 = Vec;

fn main() {
    let input = fs::read_file("./aoc2020/1.txt");
    defer input.free();

    let numbers = parse_numbers(input);
    defer numbers.free();

    let i = 0;
    loop {
        if i == numbers->size {
            break;
        };

        let a = numbers.get!<u32>(i);

        let j = 0;
        loop {
            if j == numbers->size {
                break;
            };

            let b = numbers.get!<u32>(j);
            if a + b == 2020 {
                print_u32(a * b);
                puts("\n");
                return;
            };

            j += 1;
        };

        i += 1;
    };
};

fn parse_numbers(input: &String) -> &Vec::u32 {
    let numbers = Vec::new!<u32>();
    let current_number = 0;

    let i = 0;
    loop {
        if i == input->size {
            break;
        };

        let char = input.get!<u8>(i);
        if char >= '0' && char <= '9' {
            current_number *= 10;
            current_number += char as u32 - '0';
        };

        if char == '\n' as u8 {
            numbers.push!<u32>(current_number);
            current_number = 0;
        };

        i += 1;
    };

    return numbers;
};
