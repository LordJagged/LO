(mod lib/std)
(mod lib/compiler)

(struct BinaryBuilder
    (&module (& Compiler/WasmModule))
    (&data (& Vec<u8>))
)

; public interface
(fn BinaryBuilder/build [(&module (& Compiler/WasmModule))] [(& Vec<u8>)] (
    {self : BinaryBuilder = (struct.new BinaryBuilder
        &module
        (Vec/new 100 1)
    )}

    (BinaryBuilder/emit_magic_and_version self)
    (BinaryBuilder/emit_type_section self)
    (BinaryBuilder/emit_import_section self)
    (BinaryBuilder/emit_function_section self)
    (BinaryBuilder/emit_memory_section self)
    (BinaryBuilder/emit_global_section self)
    (BinaryBuilder/emit_export_section self)
    (BinaryBuilder/emit_code_section self)
    (BinaryBuilder/emit_data_section self)

    (return {self . &data})
))

(fn BinaryBuilder/emit_magic_and_version [(self BinaryBuilder)] [] (
    (Vec/push_u8 {self . &data} 0)
    (Vec/push_all {self . &data} "asm")

    (Vec/push_u8 {self . &data} 1)
    (Vec/push_u8 {self . &data} 0)
    (Vec/push_u8 {self . &data} 0)
    (Vec/push_u8 {self . &data} 0)
))

; TODO: implement
(fn BinaryBuilder/emit_type_section [(self BinaryBuilder)] [] ())

; TODO: implement
(fn BinaryBuilder/emit_import_section [(self BinaryBuilder)] [] ())

; TODO: implement
(fn BinaryBuilder/emit_function_section [(self BinaryBuilder)] [] ())

; TODO: implement
(fn BinaryBuilder/emit_memory_section [(self BinaryBuilder)] [] ())

; TODO: implement
(fn BinaryBuilder/emit_global_section [(self BinaryBuilder)] [] ())

; TODO: implement
(fn BinaryBuilder/emit_export_section [(self BinaryBuilder)] [] ())

; TODO: implement
(fn BinaryBuilder/emit_code_section [(self BinaryBuilder)] [] ())

; TODO: implement
(fn BinaryBuilder/emit_data_section [(self BinaryBuilder)] [] ())
